name: CI/CD Deployment

on:
  push:
    branches:
    - 'test-CI-CD'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup SSH and Deploy on VPS
      run: |
        # Débuggage
        mkdir -p ~/.ssh && ls -ld ~/.ssh
        echo "${{ secrets.TEST_CICD_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        ls -l ~/.ssh
        cat ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

        # Configuration de la clé SSH
        mkdir -p ~/.ssh
        echo "${{ secrets.TEST_CICD_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.TEST_CICD_SSH_HOST }} >> ~/.ssh/known_hosts

        # Connexion SSH et exécution des commandes
        ssh -T ${{ secrets.TEST_CICD_SSH_USER }}@${{ secrets.TEST_CICD_SSH_HOST }} << 'EOF'

          # Pull de la dernière version
          cd ${{ secrets.TEST_CICD_TARGET_FOLDER }}
          git fetch origin
          git checkout test-CI-CD
          git pull origin test-CI-CD

          # Installer les dépendances PHP
          composer install --no-interaction --prefer-dist --optimize-autoloader

          # Vérifier la présence du .env et générer la clé si nécessaire
          [ -f .env ] || cp .env.example .env
          php artisan key:generate

          # Vérifier et créer le lien de stockage
          php artisan storage:link

          # Installer les dépendances JS et build
          npm install
          npm run build

          # Optimisations
          php artisan cache:clear
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache

          # Migrations
          php artisan migrate --force

          # Redémarrer les services
          php artisan queue:restart
          systemctl restart nginx
          systemctl restart php8.2-fpm
        EOF
